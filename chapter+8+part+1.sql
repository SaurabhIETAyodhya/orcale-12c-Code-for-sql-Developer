--1 using to_char  with dates
select sysdate from dual;

SELECT TO_CHAR(SYSDATE,'dd.mm.yyyy') FROM DUAL;

SELECT TO_CHAR(SYSDATE,'dd-mm-yyyy hh:mi:ss AM') FROM DUAL;--AM AND PM are the same

SELECT TO_CHAR(SYSDATE,'dd-mm-yyyy hh24:mi:ss PM') FROM DUAL;

SELECT FIRST_NAME,HIRE_DATE,TO_CHAR(HIRE_DATE, 'DD Month YYYY') HIREDATE,
TO_CHAR(HIRE_DATE, 'fmDD Month YYYY') AS HIREDATE--SO USING FM IS BETTER TO REMOVE SPAES
FROM   EMPLOYEES;

SELECT TO_CHAR(SYSDATE,'FMDD "OF" MoNTH YYYY') FROM DUAL;

SELECT TO_CHAR(SYSDATE,'FMDDsp "OF" MONTH YYYY') FROM DUAL;

SELECT TO_CHAR(SYSDATE,'fmddth "OF" MONTH YYYY') FROM DUAL;

SELECT TO_CHAR(SYSDATE,'fmddspth "OF" MONTH YYYY') FROM DUAL;

--list all the employees who employeed in 2003
SELECT * FROM EMPLOYEES
WHERE TO_CHAR(HIRE_DATE,'yyyy')='2003';

--list all the employees who employeed in feb
SELECT * FROM EMPLOYEES
WHERE TO_CHAR(HIRE_DATE,'mm')='02'; --if you put only '2'  this not coorect

SELECT * FROM EMPLOYEES
WHERE TO_CHAR(HIRE_DATE,'fmmm')='2'; --you should use fm if you want to put only '2' cz fm remove 0 and space



--2 using to_char  with number
SELECT TO_CHAR(1598) FROM DUAL;

SELECT TO_CHAR(1598,'9999') FROM DUAL;

SELECT TO_CHAR(1598,'9,999') FROM DUAL;

SELECT TO_CHAR(1598,'$9,999') FROM DUAL;

SELECT TO_CHAR(1598,'$9G999') FROM DUAL;
-------------------------------------------------
SELECT TO_CHAR(1598.87) FROM DUAL;

SELECT TO_CHAR(1598.87,'9999.99') FROM DUAL;

SELECT TO_CHAR(1598.87,'9,999.99') FROM DUAL;

SELECT TO_CHAR(1598.87,'$9,999.99') FROM DUAL;

SELECT TO_CHAR(1598.87,'$9G999.99') FROM DUAL;--ERROR IF USING G THEN USE D FOR DECIMAL

SELECT TO_CHAR(1598.87,'$9G999D99') FROM DUAL;

SELECT TO_CHAR(1598.87,'9999.9') FROM DUAL; --HERE IT WILL BE ROUND
------------------------------------------------
SELECT TO_CHAR(1598,'99') FROM DUAL;--IT WILL FAIL

SELECT TO_CHAR(1598,'0000') FROM DUAL;--IT WILL DEAL WITH ZERO LIKE 9

SELECT TO_CHAR(1598,'00000') FROM DUAL;

SELECT TO_CHAR(1598,'00000000') FROM DUAL;

SELECT TO_CHAR(1598,'0999') FROM DUAL;

SELECT TO_CHAR(1598,'00999') FROM DUAL;

SELECT TO_CHAR(1598989,'9G999G999') FROM DUAL;

SELECT TO_CHAR(-1598,'9999') FROM DUAL;

SELECT TO_CHAR(1598,'9999mi') FROM DUAL;
SELECT TO_CHAR(-1598,'9999mi') FROM DUAL;

SELECT TO_CHAR(1598,'9999PR') FROM DUAL;

SELECT TO_CHAR(-1598,'9999PR') FROM DUAL;

---THE BEST
SELECT TO_CHAR(1598,'999,999,999') FROM DUAL;

SELECT TO_CHAR(1598,'FM999,999,999') FROM DUAL;
--WHITE SPACE
SELECT TO_CHAR(7,'9') FROM DUAL;

SELECT TO_CHAR(-7,'9') FROM DUAL;

SELECT LENGTH('-7') FROM DUAL;


--3 using to numner

SELECT TO_NUMBER('1,000','9,999') FROM DUAL;

SELECT TO_NUMBER('$1,000','$9,999') FROM DUAL;

SELECT TO_NUMBER('88') FROM DUAL;

SELECT TO_NUMBER('1,980','9G999') FROM DUAL;
 


--4 using to_date

SELECT TO_DATE('10-11-2015','dd-mm-yyyy') FROM DUAL;

SELECT TO_DATE('10.11.2015','dd.mm.yyyy') FROM DUAL;

SELECT TO_DATE('10.november.2015','dd.month.yyyy') FROM DUAL;



SELECT * FROM EMPLOYEES
WHERE HIRE_DATE> TO_DATE('10-11-2003','dd-mm-yyyy');

SELECT * FROM EMPLOYEES
WHERE HIRE_DATE> TO_DATE('10-11-     2003','dd-mm-yyyy'); --oracle remove spaces 

SELECT * FROM EMPLOYEES
WHERE HIRE_DATE> TO_DATE('10-11- 2003','fxdd-mm- yyyy'); --when you put fx then exact should be mach

--RR AND YY
--rr fomrat
--in general if the value between  50-99 THIS return a 19xx year
-- A value between 0-49 will return a 20xx year 
SELECT TO_DATE('1-1-85','DD-MM-RR')  from dual;

SELECT TO_CHAR( TO_DATE('1-1-85','DD-MM-RR'),'YYYY')  from dual;

SELECT TO_DATE('1-1-85','DD-MM-YY')  from dual;

SELECT TO_CHAR(TO_DATE('1-1-85','DD-MM-YY'),'YYYY')  from dual;














